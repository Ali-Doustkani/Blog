trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  dir_blog: '$(System.DefaultWorkingDirectory)/src/Blog'
  dir_clientApp: '$(System.DefaultWorkingDirectory)/src/ClientApp'

steps:
- task: DotNetCoreCLI@2
  displayName: Build Blog
  inputs:
    command: 'build'
    arguments: '--configuration Release'
    workingDirectory: '$(dir_blog)'

- task: Npm@1
  displayName: Install Blog Node Modules
  inputs:
    command: 'install'
    workingDir: '$(dir_blog)'

- task: CmdLine@2
  displayName: Build Blog Static Assets
  inputs:
    script: 'npm run build-assets'
    workingDirectory: '$(dir_blog)'

- task: Npm@1
  displayName: Install ClientApp Node Modules
  inputs: 
    command: 'install'
    workingDir: '$(dir_clientApp)'

- task: CmdLine@2
  displayName: Build ClientApp
  inputs:
    script: 'npm run build'
    workingDirectory: '$(dir_clientApp)'

- task: DotNetCoreCLI@2
  displayName: Publish Blog
  inputs:
    command: 'publish'
    arguments: '--no-build --configuration Release'
    publishWebProjects: true
    zipAfterPublish: false
    modifyOutputPath: false
    workingDirectory: '$(dir_blog)'

- task: ArchiveFiles@2
  displayName: Archive Publish Files
  inputs:
    rootFolderOrFile: '$(dir_blog)/bin/Release/netcoreapp2.2/publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/release.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: Publish For Download
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'